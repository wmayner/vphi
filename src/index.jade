doctype html
html(lang='en' ng-app="vphi")
head
  meta(charset='utf-8')
  meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
  meta(name='viewport', content='width=device-width')
  title Calculate Φ

  //- TODO load minified versions

  //- Online/Offline
  link(href='//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css', rel='stylesheet', type='text/css')
  //- link(href='/bower_components/bootstrap/dist/css/bootstrap.css', rel='stylesheet', type='text/css')

  //- Online/Offline
  //- link(href='bower_components/c3/c3.css', rel='stylesheet', type='text/css')
  link(href='//cdnjs.cloudflare.com/ajax/libs/c3/0.4.8/c3.min.css', rel='stylesheet', type='text/css')
  
  link(href='/css/app.css', rel='stylesheet', type='text/css')

  //- Online/Offline
  //- script(src='/bower_components/angular/angular.js')
  script(src="//ajax.googleapis.com/ajax/libs/angularjs/1.3.5/angular.min.js")
body
  #top-wrapper.container-fluid
    .row.clearfix
      .col-md-6
        #graph-editor-module.well.module
          h2.module-title Network
          .row.clearfix
            .col-md-12
              #graph-editor-container
                #graph-editor(graph-editor)
              button#show-help.btn.btn-md.btn-default(type='button', data-toggle='modal', data-target='#graph-editor-help') Show Controls
              .control-panel(ng-controller='graphEditor.controlPanelCtrl')
                .vphi-label Past state:
                span.dropdown#past-state-chooser
                  button#no-possible-past-states.btn.btn-md.btn-default.disabled(ng-if="!possiblePastStates") No possible past states
                  button.btn.btn-md.btn-default.dropdown-toggle(ng-if="possiblePastStates", type='button', data-toggle='dropdown', aria-expanded='false')
                    #current-past-state {{currentPastState}}
                    span.caret
                    span.sr-only Toggle past state selection dropdown
                  ul#possible-past-states.dropdown-menu.dropdown-menu-right(ng-if="possiblePastStates", role='menu')
                    //- TODO use table?
                    li
                      a#past-state-list-header
                        strong {{nodes}}
                    li.divider
                    li(ng-repeat="pastState in possiblePastStates", ng-click="select(pastState)") 
                      a {{pastState.join(', ')}}
      .col-md-6
        #concept-space-module.well.module(ng-controller='conceptSpaceCtrl')
          h2.module-title Conceptual structure
          .row.clearfix
            .col-md-12
              #concept-space-container
                #concept-space(concept-space)
                #concept-space-overlay.hidden &nbsp;
              #concept-space-loading-spinner.hidden
                .tetrominos
                  .tetromino.box1
                  .tetromino.box2
                  .tetromino.box3
                  .tetromino.box4
          .row.row-centered.clearfix
            .col-centered
              .control-panel.btn-toolbar(ng-controller='conceptSpace.controlPanelCtrl', role='toolbar')
                .btn-group.pull-right
                  button.btn.btn-md.btn-default(ng-click='resetCamera()', type='button')
                    | Reset Camera
                  button.btn.btn-md.btn-default(ng-click='toggleGrids()', type='button')
                    | Toggle Grids
                  button.btn.btn-md.btn-default(ng-click='toggleIgnoredAxes()', type='button')
                    | Toggle Ignored Axes
                  button.btn.btn-md.btn-default(ng-click='switchView()', type='button')
                    | Switch View
    hr
    .row.row-centered.clearfix
      .col-centered
        #main-control-module.module(ng-controller="controlPanelCtrl")
          button#btn-main-complex.btn.btn-calculate.btn-lg.btn-primary(type='button', data-loading-text='Calculating…', ng-click="calculate('mainComplex')")
            | Main Complex
          button#btn-selected-subsystem.btn.btn-calculate.btn-lg.btn-primary(type='button', data-loading-text='Calculating…', ng-click="calculate('bigMip')")
            | Selected Subsystem
    hr
    .row.clearfix
      .col-md-12
        section#output-summary-module.module(ng-controller="outputSummaryCtrl")
          h2.module-title {{title}} 
            ul.node-list
              li(ng-class="{'on': currentState[n]}", ng-repeat="n in nodes") {{format.node(n)}}
          .row.row-centered.clearfix
            .col-centered
              .summary-items
                #phi-value.item.well
                  .vphi-label \( \large \Phi \)
                  .value.number-7 {{bigPhi}}
                #minimal-cut.item.well
                  .vphi-label Minimal cut
                  .value.number-2(ng-if="!cut") –
                  .value(ng-if="cut.severed.length === 0") N/A
                  span(ng-if="cut.severed.length > 0")
                    ul.node-list.secondary
                      li(ng-repeat="n in cut.severed") {{n}}
                    span.cut-symbol ⇏
                    ul.node-list.secondary
                      li(ng-repeat="n in cut.intact") {{n}}
                #num-concepts.item.well
                  .vphi-label Number of concepts
                  .value.number-2 {{numConcepts}}
                #sum-small-phi.item.well
                  .vphi-label \( \sum\varphi \)
                  .value.number-7 {{sumSmallPhi}}
    .row.clearfix
      .col-md-12
        section#concept-list-module.module.hidden(ng-controller='conceptListCtrl')
          h2.module-title Concepts
          .concept.well(ng-controller='conceptList.conceptCtrl' ng-repeat='concept in concepts', id="concept-{{$index}}")
            .row.row-centered.clearfix
              .col-xs-4
                ul.concept-data
                  li
                    .small-phi-past
                      .vphi-label(class='{{smallPhiPastClass}}') \( \varphi_{p} \)
                      .value.number-7 {{smallPhiPast}}
                  li
                    .small-phi-mips
                      .vphi-label Cause MIP:
                      .math-output \( {{causeMip}} \)
                      span.hidden-xs.spacer &nbsp;
                      .vphi-label Partitioned:
                      .math-output \( {{partitionedCauseMip}} \)
              .col-xs-4
                ul.node-list.mechanism
                  li(ng-class="{'on': currentState[n]}", ng-repeat="n in mechanism") {{format.node(n)}}
                hr
                .small-phi
                  .vphi-label \( \large \varphi \)
                  .value.number-7 {{smallPhi}}
              .col-xs-4
                ul.concept-data
                  li
                    .small-phi-future
                      .vphi-label(class="{{smallPhiFutureClass}}") \( \varphi_{f} \)
                      .value.number-7 {{smallPhiFuture}}
                  li
                    .small-phi-mips
                      .vphi-label Effect MIP:
                      .math-output \( {{effectMip}} \)
                      span.hidden-xs.spacer &nbsp;
                      .vphi-label Partitioned:
                      .math-output \( {{partitionedEffectMip}} \)
            .row.clearfix
              //- Stack repertoire graphs for more width depending on how many
              //- states are being displayed.
              div(ng-class="{'col-md-12': numNodes > 5, 'col-md-6': numNodes <= 5}")
                .repertoire-container
                  .row.clearfix
                    .col-md-12
                      h5.repertoire-title Cause Repertoire
                      .repertoire(repertoire-chart, direction="cause")
              div(ng-class="{'col-md-12': numNodes > 5, 'col-md-6': numNodes <= 5}")
                .repertoire-container
                  .row.clearfix
                    .col-md-12
                      h5.repertoire-title Effect Repertoire
                      .repertoire(repertoire-chart, direction="effect")

  #graph-editor-help.modal.fade
    .modal-dialog
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal', aria-label='Close')
              span(aria-hidden='true') &times;
            h4.modal-title Graph-editing controls
          .modal-body
            ul.commands
              li <strong>Click and drag</strong> to select nodes. Holding <span class="keyboard">shift</span> or <span class="keyboard">command</span> while dragging will add to the selection. 
              li <strong>Double-click</strong> to add nodes. The new node will automatically connect to any nodes within the blue circle.
              li <span class="keyboard">command</span><strong> + click</strong> while the blue circle is around your cursor to connect all the nodes within.
              li <span class="keyboard">command</span><strong> + click</strong> to select/deselect individual nodes.
              li <strong>Click and drag from one node to another</strong> to add edges.
              li <span class="keyboard">shift</span><strong> + click and drag</strong> to reposition nodes. Repositioned nodes will stay fixed in place.
              li <strong>Mouse-over</strong> nodes or edges to focus them. New ones are automatically focused.
              li When a node is focused: 
                ul
                  li Press <span class="keyboard">s</span> to <strong>s</strong>elect/deselect the node.
                  li <strong>Click it</strong> or press <span class="keyboard">spacebar</span> to change its state.
                  li Press <span class="keyboard">m</span> to change the node's <strong>m</strong>echanism.
                  li Press <span class="keyboard">r</span> to change whether the node has a <strong>r</strong>eflexive edge (self-loop).
                  li Press <span class="keyboard">f</span> to <strong>f</strong>ix the node in place or release it.
                  li Press <span class="keyboard">t</span> to change the node's <strong>t</strong>hreshold. The threshold only has an effect when the mechanism is <span class="keyboard">></span> or <span class="keyboard"><</span>.
                  li Press <span class="keyboard">delete</span>, <span class="keyboard">backspace</span>, or <span class="keyboard">d</span> to <strong>d</strong>elete the node.
              li When an edge is focused:
                ul
                  li <strong>Click it</strong> or press <span class="keyboard">d</span> to change the <strong>d</strong>irection of the edge.
                  li Press <span class="keyboard">b</span> to make the edge <strong>b</strong>idirectional.
                  li Press <span class="keyboard">delete</span>, <span class="keyboard">backspace</span>, or <span class="keyboard">d</span> to <strong>d</strong>elete the edge.
              li Use the <strong>past state dropdown menu</strong> to select the network's past state from among those that could have lead to the current one.
          .modal-footer
            button.btn.btn-default(type='button', data-dismiss='modal') Close

  //- Online/Offline
  script(src='//cdnjs.cloudflare.com/ajax/libs/loglevel/1.2.0/loglevel.min.js')
  // script(src='/bower_components/loglevel/dist/loglevel.min.js')
  
  //- Online/Offline
  script(src='//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js')
  //- script(src='/bower_components/jquery/jquery.min.js')

  //- TODO minify?
  script(src='/js/lib/jquery.jsonrpcclient.js')
  //- script(src='/bower_components/jquery-jsonrpcclient/jquery.jsonrpcclient.js')

  //- Online/Offline
  //- TODO get minified versions
  script(src='//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3.min.js')
  //- script(src='/bower_components/d3/d3.js')

  //- Online/Offline
  script(src='//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.7.0/underscore-min.js')
  //- script(src='/bower_components/underscore/underscore.js')

  //- TODO get minified versions
  //- Online/Offline
  script(src='//cdnjs.cloudflare.com/ajax/libs/c3/0.4.8/c3.min.js')
  //- script(src='/bower_components/c3/c3.js')

  //- Online/Offline
  script(src='//cdnjs.cloudflare.com/ajax/libs/three.js/r69/three.min.js')
  //- script(src='/bower_components/threejs/build/three.js')

  script(src='/js/lib/OrbitControls.js')
  script(src='/js/lib/Detector.js')

  //- Online/Offline
  script(src='http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML')
  //- IMPORTANT: If loading from Bower, need to load the config file also
  // script(src='/bower_components/MathJax/MathJax.js')
  // script(src='/bower_components/MathJax/config/TeX-AMS-MML_HTMLorMML.js')

  script(src='/js/app.js')

  //- Online/Offline
  script(src='//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js')
  //- script(src='/bower_components/bootstrap/dist/js/bootstrap.js')
